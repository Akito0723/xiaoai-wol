name: Build Docker

on:
  - workflow_dispatch

jobs:
  version-info:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get next version
        uses: reecetech/version-increment@2024.4.4
        id: next-latest-release
        with:
          scheme: calver
      - name: Check version
        run: |
          echo "release version: ${{ steps.next-latest-release.outputs.v-version }}"
    outputs:
      version: ${{ steps.next-latest-release.outputs.v-version }}

  build-docker:
    runs-on: ubuntu-latest
    needs: [version-info]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Version info via tag
        working-directory: ./backend/src
        run: |
          echo ${{ needs.version-info.outputs.version }}
          7

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker metadata main
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            estrellaxd/auto_bangumi
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ needs.version-info.outputs.version }}
            type=raw,value=latest

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          builder: ${{ steps.buildx.output.name }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: True
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}

  release:
    runs-on: ubuntu-latest
    needs: [build-docker, version-info]
    outputs:
      url: ${{ steps.release.outputs.url }}
      version: ${{ needs.version-info.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact webui
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: webui/dist

      - name: Zip webui
        run: |
          cd webui && ls -al && tree && zip -r dist.zip dist

      - name: Download artifact app
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: backend/src/dist

      - name: Create Version info via tag
        working-directory: ./backend/src
        run: |
          echo ${{ needs.version-info.outputs.version }}
          echo "VERSION='${{ needs.version-info.outputs.version }}'" >> module/__version__.py

      - name: Copy requirements.txt
        working-directory: ./backend
        run: cp requirements.txt src/requirements.txt

      - name: Zip app
        run: |
          cd backend && zip -r app-v${{ needs.version-info.outputs.version }}.zip src

      - name: Generate Release info
        id: release-info
        run: |
          if ${{ needs.version-info.outputs.dev == 1 }}; then
            echo "version=ðŸŒ™${{ needs.version-info.outputs.version }}" >> $GITHUB_OUTPUT
            echo "pre_release=true" >> $GITHUB_OUTPUT
          else
            echo "version=ðŸŒŸ${{ needs.version-info.outputs.version }}" >> $GITHUB_OUTPUT
            echo "pre_release=false" >> $GITHUB_OUTPUT
          fi

      - name: Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.version-info.outputs.version }}
          name: ${{ steps.release-info.outputs.version }}
          body: ${{ github.event.pull_request.body }}
          draft: false
          prerelease: ${{ steps.release-info.outputs.pre_release == 'true' }}
          files: |
            webui/dist.zip
            backend/app-v${{ needs.version-info.outputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
